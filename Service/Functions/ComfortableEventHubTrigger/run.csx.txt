using System;

public static void Run(string myEventHubMessage, TraceWriter log)
{
    log.Info($"C# Event Hub trigger function processed a message: {myEventHubMessage}");
    string json = "";
    string content = "";
    using (var textreader = new System.IO.StringReader(myEventHubMessage))
    {
         while ((content = textreader.ReadLine()) != null)
         {
             if (string.IsNullOrEmpty(json))
             {
                 json = "[";
             }
             else
             {
                  json += ",";
             }
             json += content;
        }
    }
    json += "]";
    try{
        var deserialized = Newtonsoft.Json.JsonConvert.DeserializeObject<System.Collections.Generic.List<ComfortableStatus>>(json);
        var hubConnection = new Microsoft.AspNet.SignalR.Client.HubConnection("http://[Web-App-Name].azurewebsites.net");
        var proxy = hubConnection.CreateHubProxy("ComfortableHub");
        hubConnection.Start().Wait();
        foreach (var item in deserialized)
        {
            proxy.Invoke("Notify", new[] { item });
        }
    }
    catch(Exception ex)
    {
        log.Info("SignalR Hub Invoke Failed - "+ex.Message);
    }
}

public class ComfortableStatus
{
    public string DeviceId{get;set;}
    public DateTime MeasuredTime{get;set;}
    public double Temperature{get;set;}
    public double Humidity{get;set;}
    public double Pressure{get;set;}
    public bool PredictedComfortable { get; set; }
    public double Probability { get; set; }
}
